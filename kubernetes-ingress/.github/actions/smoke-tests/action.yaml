
name: Run Smoke Tests
description: Run Smoke Tests for the project

inputs:
  k8s-version:
    description: Kubernetes version to use
    required: false
  k8s-timeout:
    description: Timeout to use
    default: 75s
    required: false
  image:
    description: Docker image to use
    default: debian
    required: false
  marker:
    description: Marker to use
    required: false
  nginx-key:
    description: Nginx key to use
    required: false
  nginx-crt:
    description: Nginx cert to use
    required: false

outputs:
  test-results-name:
    description: Test results name
    value: tests-${{ steps.k8s.outputs.cluster }}

runs:
  using: composite
  steps:
    - name: Fetch Cached Artifacts
      uses: actions/cache@v2
      with:
        path: ${{ github.workspace }}/dist
        key: nginx-ingress-${{ github.run_id }}-${{ github.run_number }}-single

    - name: Ingress type
      id: ingress-type
      run: |
        echo ::set-output name=name::nginx${{ contains(inputs.image, 'plus') && '-plus' || '' }}-ingress
        echo ::set-output name=tag::${{ inputs.image }}${{ contains(inputs.image, 'nap') && '-dos' || '' }}-${{ github.sha }}
      shell: bash

    - name: Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Build ${{ inputs.image }} Container
      uses: docker/build-push-action@v2
      with:
        file: build/Dockerfile
        context: '.'
        cache-from: type=gha,scope=${{ inputs.image }}
        cache-to: type=gha,scope=${{ inputs.image }},mode=max
        target: goreleaser
        tags: 'docker.io/nginx/${{ steps.ingress-type.outputs.name }}:${{ steps.ingress-type.outputs.tag }}'
        load: true
        pull: true
        build-args: |
          BUILD_OS=${{ inputs.image }}
          IC_VERSION=CI
          ${{ contains(inputs.image, 'nap') && 'NAP_MODULES=dos' || '' }}
        secrets: |
          ${{ contains(inputs.image, 'plus') && format('"nginx-repo.crt={0}"', inputs.nginx-crt) || '' }}
          ${{ contains(inputs.image, 'plus') && format('"nginx-repo.key={0}"', inputs.nginx-key) || '' }}

    - name: Build Test-Runner Container
      uses: docker/build-push-action@v2
      with:
        file: tests/docker/Dockerfile
        context: '.'
        cache-from: type=gha,scope=test-runner
        cache-to: type=gha,scope=test-runner,mode=max
        tags: test-runner:${{ github.sha }}
        pull: true
        load: true

    - name: Deploy Kubernetes
      id: k8s
      run: |
        # no support for dual stack in < 1.20, we need to use ipv4 only
        printf '%s\n' "1.20.0" "${{ inputs.k8s-version }}" | sort --version-sort --check=quiet || echo "Using ipv4" && sed -i 's/dual/ipv4/g' ${{ github.workspace }}/tests/ci-files/ci-kind-config.yaml
        kind create cluster --name ${{ github.run_id }} --image=kindest/node:v${{ inputs.k8s-version }} --config ${{ github.workspace }}/tests/ci-files/ci-kind-config.yaml --kubeconfig kube-${{ github.run_id }} --wait ${{ inputs.k8s-timeout }}
        kind load docker-image docker.io/nginx/${{ steps.ingress-type.outputs.name }}:${{ steps.ingress-type.outputs.tag }} --name ${{ github.run_id }}
        marker="${{ inputs.marker }}"
        sanitized_marker="${marker// /_}"
        name="${sanitized_marker:-${{ inputs.k8s-version }}}"
        echo ::set-output name=cluster_ip::$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' ${{ github.run_id }}-control-plane)
        echo ::set-output name=cluster::$(echo nginx-${{ inputs.image }}-$name)
      shell: bash

    - name: Setup Kubeconfig
      run: |
        sed -i 's|server:.*|server: https://${{ steps.k8s.outputs.cluster_ip }}:6443|' kube-${{ github.run_id }}
      shell: bash

    - name: Run Smoke Tests
      run: |
        touch tests-${{ steps.k8s.outputs.cluster }}.html
        docker run --rm \
        --name test-runner-${{ github.run_id }} \
        --network=kind \
        -v ${{ github.workspace }}/tests/tests-${{ steps.k8s.outputs.cluster }}.html:/workspace/tests/tests-${{ steps.k8s.outputs.cluster }}.html \
        -v ${{ github.workspace }}/kube-${{ github.run_id }}:/root/.kube/config test-runner:${{ github.sha }} \
        --context=kind-${{ github.run_id }} \
        --image=docker.io/nginx/${{ steps.ingress-type.outputs.name }}:${{ steps.ingress-type.outputs.tag }} \
        --image-pull-policy=Never \
        --ic-type=${{ steps.ingress-type.outputs.name }} \
        --service=nodeport --node-ip=${{ steps.k8s.outputs.cluster_ip }} \
        --html=tests-${{ steps.k8s.outputs.cluster }}.html \
        --self-contained-html \
        --durations=10 \
        --show-ic-logs=yes \
        -m ${{ inputs.marker != '' && inputs.marker || '""' }}
      working-directory: ./tests
      shell: bash
